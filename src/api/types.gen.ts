// This file is auto-generated by @hey-api/openapi-ts

export type AppointmentCreate = {
    user_id: number;
    barber_id: number;
    schedule_id: number;
    status: AppointmentStatus;
};

export type AppointmentResponse = {
    appointment_id: number;
    user_id: number;
    barber_id: number;
    status: AppointmentStatus;
};

export type AppointmentStatus = 'pending' | 'confirmed' | 'completed' | 'cancelled';

export type AppointmentUpdate = {
    user_id?: number | null;
    barber_id?: number | null;
    schedule_id?: number | null;
    status?: AppointmentStatus | null;
};

export type BarberBase = {
    user_id: number;
};

export type BarberResponse = {
    user_id: number;
    barber_id: number;
};

export type BodyLoginLoginPost = {
    username: string;
    password: string;
};

export type ErrorResponse = {
    detail: string;
};

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

export type ScheduleCreate = {
    barber_id: number;
    appointment_id?: number | null;
    date: string;
    startTime: string;
    endTime: string;
};

export type ScheduleResponse = {
    barber_id: number;
    appointment_id?: number | null;
    date: string;
    startTime: string;
    endTime: string;
    schedule_id: number;
};

export type ScheduleUpdate = {
    barber_id?: number | null;
    appointment_id?: number | null;
    date?: string | null;
    startTime?: string | null;
    endTime?: string | null;
};

export type ServiceBase = {
    name: string;
    duration: string;
    price: number | string;
};

export type ServiceResponse = {
    name: string;
    duration: string;
    price: string;
    service_id: number;
};

export type ServiceUpdate = {
    name?: string | null;
    duration?: string | null;
    price?: number | string;
};

export type TokenResponse = {
    access_token: string;
    token_type?: string;
};

export type UserCreate = {
    firstName: string;
    lastName: string;
    email: string;
    phoneNumber: string;
    is_admin?: boolean;
    password: string;
};

export type UserInfo = {
    username: string;
    email: string;
    first_name: string;
    last_name: string;
    roles: Array<unknown>;
};

export type UserResponse = {
    firstName: string;
    lastName: string;
    email: string;
    phoneNumber: string;
    is_admin?: boolean;
    user_id: number;
};

export type UserUpdate = {
    firstName?: string | null;
    lastName?: string | null;
    email?: string | null;
    phoneNumber?: string | null;
    is_admin?: boolean | null;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type GetUsersApiV1UsersGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/users';
};

export type GetUsersApiV1UsersGetErrors = {
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type GetUsersApiV1UsersGetError = GetUsersApiV1UsersGetErrors[keyof GetUsersApiV1UsersGetErrors];

export type GetUsersApiV1UsersGetResponses = {
    /**
     * Successful Response
     */
    200: Array<UserResponse>;
};

export type GetUsersApiV1UsersGetResponse = GetUsersApiV1UsersGetResponses[keyof GetUsersApiV1UsersGetResponses];

export type CreateUserApiV1UsersPostData = {
    body: UserCreate;
    path?: never;
    query?: never;
    url: '/api/v1/users';
};

export type CreateUserApiV1UsersPostErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Validation Error
     */
    422: HttpValidationError;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type CreateUserApiV1UsersPostError = CreateUserApiV1UsersPostErrors[keyof CreateUserApiV1UsersPostErrors];

export type CreateUserApiV1UsersPostResponses = {
    /**
     * Successful Response
     */
    200: UserResponse;
};

export type CreateUserApiV1UsersPostResponse = CreateUserApiV1UsersPostResponses[keyof CreateUserApiV1UsersPostResponses];

export type DeleteUserApiV1UsersUserIdDeleteData = {
    body?: never;
    path: {
        user_id: number;
    };
    query?: never;
    url: '/api/v1/users/{user_id}';
};

export type DeleteUserApiV1UsersUserIdDeleteErrors = {
    /**
     * Not Found
     */
    404: ErrorResponse;
    /**
     * Validation Error
     */
    422: HttpValidationError;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type DeleteUserApiV1UsersUserIdDeleteError = DeleteUserApiV1UsersUserIdDeleteErrors[keyof DeleteUserApiV1UsersUserIdDeleteErrors];

export type DeleteUserApiV1UsersUserIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type DeleteUserApiV1UsersUserIdDeleteResponse = DeleteUserApiV1UsersUserIdDeleteResponses[keyof DeleteUserApiV1UsersUserIdDeleteResponses];

export type GetUserApiV1UsersUserIdGetData = {
    body?: never;
    path: {
        user_id: number;
    };
    query?: never;
    url: '/api/v1/users/{user_id}';
};

export type GetUserApiV1UsersUserIdGetErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Validation Error
     */
    422: HttpValidationError;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type GetUserApiV1UsersUserIdGetError = GetUserApiV1UsersUserIdGetErrors[keyof GetUserApiV1UsersUserIdGetErrors];

export type GetUserApiV1UsersUserIdGetResponses = {
    /**
     * Successful Response
     */
    200: UserResponse;
};

export type GetUserApiV1UsersUserIdGetResponse = GetUserApiV1UsersUserIdGetResponses[keyof GetUserApiV1UsersUserIdGetResponses];

export type UpdateUserApiV1UsersUserIdPutData = {
    body: UserUpdate;
    path: {
        user_id: number;
    };
    query?: never;
    url: '/api/v1/users/{user_id}';
};

export type UpdateUserApiV1UsersUserIdPutErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Validation Error
     */
    422: HttpValidationError;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type UpdateUserApiV1UsersUserIdPutError = UpdateUserApiV1UsersUserIdPutErrors[keyof UpdateUserApiV1UsersUserIdPutErrors];

export type UpdateUserApiV1UsersUserIdPutResponses = {
    /**
     * Successful Response
     */
    200: UserResponse;
};

export type UpdateUserApiV1UsersUserIdPutResponse = UpdateUserApiV1UsersUserIdPutResponses[keyof UpdateUserApiV1UsersUserIdPutResponses];

export type GetAllBarbersApiV1BarbersGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/barbers';
};

export type GetAllBarbersApiV1BarbersGetErrors = {
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type GetAllBarbersApiV1BarbersGetError = GetAllBarbersApiV1BarbersGetErrors[keyof GetAllBarbersApiV1BarbersGetErrors];

export type GetAllBarbersApiV1BarbersGetResponses = {
    /**
     * Successful Response
     */
    200: Array<BarberResponse>;
};

export type GetAllBarbersApiV1BarbersGetResponse = GetAllBarbersApiV1BarbersGetResponses[keyof GetAllBarbersApiV1BarbersGetResponses];

export type CreateBarberApiV1BarbersPostData = {
    body: BarberBase;
    path?: never;
    query?: never;
    url: '/api/v1/barbers';
};

export type CreateBarberApiV1BarbersPostErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Validation Error
     */
    422: HttpValidationError;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type CreateBarberApiV1BarbersPostError = CreateBarberApiV1BarbersPostErrors[keyof CreateBarberApiV1BarbersPostErrors];

export type CreateBarberApiV1BarbersPostResponses = {
    /**
     * Successful Response
     */
    200: BarberResponse;
};

export type CreateBarberApiV1BarbersPostResponse = CreateBarberApiV1BarbersPostResponses[keyof CreateBarberApiV1BarbersPostResponses];

export type GetBarberByIdApiV1BarbersBarberIdGetData = {
    body?: never;
    path: {
        barber_id: number;
    };
    query?: never;
    url: '/api/v1/barbers/{barber_id}';
};

export type GetBarberByIdApiV1BarbersBarberIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type GetBarberByIdApiV1BarbersBarberIdGetError = GetBarberByIdApiV1BarbersBarberIdGetErrors[keyof GetBarberByIdApiV1BarbersBarberIdGetErrors];

export type GetBarberByIdApiV1BarbersBarberIdGetResponses = {
    /**
     * Successful Response
     */
    200: BarberResponse;
};

export type GetBarberByIdApiV1BarbersBarberIdGetResponse = GetBarberByIdApiV1BarbersBarberIdGetResponses[keyof GetBarberByIdApiV1BarbersBarberIdGetResponses];

export type GetAllServicesApiV1ServicesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/services';
};

export type GetAllServicesApiV1ServicesGetErrors = {
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type GetAllServicesApiV1ServicesGetError = GetAllServicesApiV1ServicesGetErrors[keyof GetAllServicesApiV1ServicesGetErrors];

export type GetAllServicesApiV1ServicesGetResponses = {
    /**
     * Successful Response
     */
    200: Array<ServiceResponse>;
};

export type GetAllServicesApiV1ServicesGetResponse = GetAllServicesApiV1ServicesGetResponses[keyof GetAllServicesApiV1ServicesGetResponses];

export type CreateServiceApiV1ServicesPostData = {
    body: ServiceBase;
    path?: never;
    query?: never;
    url: '/api/v1/services';
};

export type CreateServiceApiV1ServicesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type CreateServiceApiV1ServicesPostError = CreateServiceApiV1ServicesPostErrors[keyof CreateServiceApiV1ServicesPostErrors];

export type CreateServiceApiV1ServicesPostResponses = {
    /**
     * Successful Response
     */
    200: ServiceResponse;
};

export type CreateServiceApiV1ServicesPostResponse = CreateServiceApiV1ServicesPostResponses[keyof CreateServiceApiV1ServicesPostResponses];

export type DeleteServiceApiV1ServicesServiceIdDeleteData = {
    body?: never;
    path: {
        service_id: number;
    };
    query?: never;
    url: '/api/v1/services/{service_id}';
};

export type DeleteServiceApiV1ServicesServiceIdDeleteErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Validation Error
     */
    422: HttpValidationError;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type DeleteServiceApiV1ServicesServiceIdDeleteError = DeleteServiceApiV1ServicesServiceIdDeleteErrors[keyof DeleteServiceApiV1ServicesServiceIdDeleteErrors];

export type DeleteServiceApiV1ServicesServiceIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type DeleteServiceApiV1ServicesServiceIdDeleteResponse = DeleteServiceApiV1ServicesServiceIdDeleteResponses[keyof DeleteServiceApiV1ServicesServiceIdDeleteResponses];

export type UpdateServiceApiV1ServicesServiceIdPutData = {
    body: ServiceUpdate;
    path: {
        service_id: number;
    };
    query?: never;
    url: '/api/v1/services/{service_id}';
};

export type UpdateServiceApiV1ServicesServiceIdPutErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Validation Error
     */
    422: HttpValidationError;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type UpdateServiceApiV1ServicesServiceIdPutError = UpdateServiceApiV1ServicesServiceIdPutErrors[keyof UpdateServiceApiV1ServicesServiceIdPutErrors];

export type UpdateServiceApiV1ServicesServiceIdPutResponses = {
    /**
     * Successful Response
     */
    200: ServiceResponse;
};

export type UpdateServiceApiV1ServicesServiceIdPutResponse = UpdateServiceApiV1ServicesServiceIdPutResponses[keyof UpdateServiceApiV1ServicesServiceIdPutResponses];

export type GetSchedulesApiV1SchedulesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/schedules';
};

export type GetSchedulesApiV1SchedulesGetErrors = {
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type GetSchedulesApiV1SchedulesGetError = GetSchedulesApiV1SchedulesGetErrors[keyof GetSchedulesApiV1SchedulesGetErrors];

export type GetSchedulesApiV1SchedulesGetResponses = {
    /**
     * Successful Response
     */
    200: Array<ScheduleResponse>;
};

export type GetSchedulesApiV1SchedulesGetResponse = GetSchedulesApiV1SchedulesGetResponses[keyof GetSchedulesApiV1SchedulesGetResponses];

export type CreateScheduleApiV1SchedulesPostData = {
    body: ScheduleCreate;
    path?: never;
    query?: never;
    url: '/api/v1/schedules';
};

export type CreateScheduleApiV1SchedulesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type CreateScheduleApiV1SchedulesPostError = CreateScheduleApiV1SchedulesPostErrors[keyof CreateScheduleApiV1SchedulesPostErrors];

export type CreateScheduleApiV1SchedulesPostResponses = {
    /**
     * Successful Response
     */
    200: ScheduleResponse;
};

export type CreateScheduleApiV1SchedulesPostResponse = CreateScheduleApiV1SchedulesPostResponses[keyof CreateScheduleApiV1SchedulesPostResponses];

export type DeleteScheduleApiV1SchedulesScheduleIdDeleteData = {
    body?: never;
    path: {
        schedule_id: number;
    };
    query?: never;
    url: '/api/v1/schedules/{schedule_id}';
};

export type DeleteScheduleApiV1SchedulesScheduleIdDeleteErrors = {
    /**
     * Not Found
     */
    404: ErrorResponse;
    /**
     * Validation Error
     */
    422: HttpValidationError;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type DeleteScheduleApiV1SchedulesScheduleIdDeleteError = DeleteScheduleApiV1SchedulesScheduleIdDeleteErrors[keyof DeleteScheduleApiV1SchedulesScheduleIdDeleteErrors];

export type DeleteScheduleApiV1SchedulesScheduleIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type DeleteScheduleApiV1SchedulesScheduleIdDeleteResponse = DeleteScheduleApiV1SchedulesScheduleIdDeleteResponses[keyof DeleteScheduleApiV1SchedulesScheduleIdDeleteResponses];

export type GetScheduleApiV1SchedulesScheduleIdGetData = {
    body?: never;
    path: {
        schedule_id: number;
    };
    query?: never;
    url: '/api/v1/schedules/{schedule_id}';
};

export type GetScheduleApiV1SchedulesScheduleIdGetErrors = {
    /**
     * Not Found
     */
    404: ErrorResponse;
    /**
     * Validation Error
     */
    422: HttpValidationError;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type GetScheduleApiV1SchedulesScheduleIdGetError = GetScheduleApiV1SchedulesScheduleIdGetErrors[keyof GetScheduleApiV1SchedulesScheduleIdGetErrors];

export type GetScheduleApiV1SchedulesScheduleIdGetResponses = {
    /**
     * Successful Response
     */
    200: ScheduleResponse;
};

export type GetScheduleApiV1SchedulesScheduleIdGetResponse = GetScheduleApiV1SchedulesScheduleIdGetResponses[keyof GetScheduleApiV1SchedulesScheduleIdGetResponses];

export type UpdateScheduleApiV1SchedulesScheduleIdPutData = {
    body: ScheduleUpdate;
    path: {
        schedule_id: number;
    };
    query?: never;
    url: '/api/v1/schedules/{schedule_id}';
};

export type UpdateScheduleApiV1SchedulesScheduleIdPutErrors = {
    /**
     * Not Found
     */
    404: ErrorResponse;
    /**
     * Validation Error
     */
    422: HttpValidationError;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type UpdateScheduleApiV1SchedulesScheduleIdPutError = UpdateScheduleApiV1SchedulesScheduleIdPutErrors[keyof UpdateScheduleApiV1SchedulesScheduleIdPutErrors];

export type UpdateScheduleApiV1SchedulesScheduleIdPutResponses = {
    /**
     * Successful Response
     */
    200: ScheduleResponse;
};

export type UpdateScheduleApiV1SchedulesScheduleIdPutResponse = UpdateScheduleApiV1SchedulesScheduleIdPutResponses[keyof UpdateScheduleApiV1SchedulesScheduleIdPutResponses];

export type GetAppointmentsApiV1AppointmentsGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/appointments';
};

export type GetAppointmentsApiV1AppointmentsGetErrors = {
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type GetAppointmentsApiV1AppointmentsGetError = GetAppointmentsApiV1AppointmentsGetErrors[keyof GetAppointmentsApiV1AppointmentsGetErrors];

export type GetAppointmentsApiV1AppointmentsGetResponses = {
    /**
     * Successful Response
     */
    200: Array<AppointmentResponse>;
};

export type GetAppointmentsApiV1AppointmentsGetResponse = GetAppointmentsApiV1AppointmentsGetResponses[keyof GetAppointmentsApiV1AppointmentsGetResponses];

export type CreateAppointmentApiV1AppointmentsPostData = {
    body: AppointmentCreate;
    path?: never;
    query?: never;
    url: '/api/v1/appointments';
};

export type CreateAppointmentApiV1AppointmentsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type CreateAppointmentApiV1AppointmentsPostError = CreateAppointmentApiV1AppointmentsPostErrors[keyof CreateAppointmentApiV1AppointmentsPostErrors];

export type CreateAppointmentApiV1AppointmentsPostResponses = {
    /**
     * Successful Response
     */
    200: AppointmentResponse;
};

export type CreateAppointmentApiV1AppointmentsPostResponse = CreateAppointmentApiV1AppointmentsPostResponses[keyof CreateAppointmentApiV1AppointmentsPostResponses];

export type DeleteAppointmentApiV1AppointmentsAppointmentIdDeleteData = {
    body?: never;
    path: {
        appointment_id: number;
    };
    query?: never;
    url: '/api/v1/appointments/{appointment_id}';
};

export type DeleteAppointmentApiV1AppointmentsAppointmentIdDeleteErrors = {
    /**
     * Not Found
     */
    404: ErrorResponse;
    /**
     * Validation Error
     */
    422: HttpValidationError;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type DeleteAppointmentApiV1AppointmentsAppointmentIdDeleteError = DeleteAppointmentApiV1AppointmentsAppointmentIdDeleteErrors[keyof DeleteAppointmentApiV1AppointmentsAppointmentIdDeleteErrors];

export type DeleteAppointmentApiV1AppointmentsAppointmentIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type DeleteAppointmentApiV1AppointmentsAppointmentIdDeleteResponse = DeleteAppointmentApiV1AppointmentsAppointmentIdDeleteResponses[keyof DeleteAppointmentApiV1AppointmentsAppointmentIdDeleteResponses];

export type GetAppointmentApiV1AppointmentsAppointmentIdGetData = {
    body?: never;
    path: {
        appointment_id: number;
    };
    query?: never;
    url: '/api/v1/appointments/{appointment_id}';
};

export type GetAppointmentApiV1AppointmentsAppointmentIdGetErrors = {
    /**
     * Not Found
     */
    404: ErrorResponse;
    /**
     * Validation Error
     */
    422: HttpValidationError;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type GetAppointmentApiV1AppointmentsAppointmentIdGetError = GetAppointmentApiV1AppointmentsAppointmentIdGetErrors[keyof GetAppointmentApiV1AppointmentsAppointmentIdGetErrors];

export type GetAppointmentApiV1AppointmentsAppointmentIdGetResponses = {
    /**
     * Successful Response
     */
    200: AppointmentResponse;
};

export type GetAppointmentApiV1AppointmentsAppointmentIdGetResponse = GetAppointmentApiV1AppointmentsAppointmentIdGetResponses[keyof GetAppointmentApiV1AppointmentsAppointmentIdGetResponses];

export type UpdateAppointmentApiV1AppointmentsAppointmentIdPutData = {
    body: AppointmentUpdate;
    path: {
        appointment_id: number;
    };
    query?: never;
    url: '/api/v1/appointments/{appointment_id}';
};

export type UpdateAppointmentApiV1AppointmentsAppointmentIdPutErrors = {
    /**
     * Not Found
     */
    404: ErrorResponse;
    /**
     * Validation Error
     */
    422: HttpValidationError;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
};

export type UpdateAppointmentApiV1AppointmentsAppointmentIdPutError = UpdateAppointmentApiV1AppointmentsAppointmentIdPutErrors[keyof UpdateAppointmentApiV1AppointmentsAppointmentIdPutErrors];

export type UpdateAppointmentApiV1AppointmentsAppointmentIdPutResponses = {
    /**
     * Successful Response
     */
    200: AppointmentResponse;
};

export type UpdateAppointmentApiV1AppointmentsAppointmentIdPutResponse = UpdateAppointmentApiV1AppointmentsAppointmentIdPutResponses[keyof UpdateAppointmentApiV1AppointmentsAppointmentIdPutResponses];

export type ReadRootGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type ReadRootGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type LoginLoginPostData = {
    body: BodyLoginLoginPost;
    path?: never;
    query?: never;
    url: '/login';
};

export type LoginLoginPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoginLoginPostError = LoginLoginPostErrors[keyof LoginLoginPostErrors];

export type LoginLoginPostResponses = {
    /**
     * Successful Response
     */
    200: TokenResponse;
};

export type LoginLoginPostResponse = LoginLoginPostResponses[keyof LoginLoginPostResponses];

export type ProtectedEndpointProtectedGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/protected';
};

export type ProtectedEndpointProtectedGetResponses = {
    /**
     * Successful Response
     */
    200: UserInfo;
};

export type ProtectedEndpointProtectedGetResponse = ProtectedEndpointProtectedGetResponses[keyof ProtectedEndpointProtectedGetResponses];

export type BarberProtectedBarberProtectedGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/barber/protected';
};

export type BarberProtectedBarberProtectedGetResponses = {
    /**
     * Successful Response
     */
    200: UserInfo;
};

export type BarberProtectedBarberProtectedGetResponse = BarberProtectedBarberProtectedGetResponses[keyof BarberProtectedBarberProtectedGetResponses];

export type RootHealthzGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/healthz';
};

export type RootHealthzGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ClientOptions = {
    baseUrl: 'http://localhost:8000' | (string & {});
};