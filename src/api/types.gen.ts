// This file is auto-generated by @hey-api/openapi-ts

export type BodyLoginForAccessTokenAuthTokenPost = {
    grant_type?: string | null;
    username: string;
    password: string;
    scope?: string;
    client_id?: string | null;
    client_secret?: string | null;
};

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

export type UserBase = {
    firstName: string;
    lastName: string;
    email: string;
    phoneNumber: string;
    is_admin?: boolean;
};

export type UserResponse = {
    firstName: string;
    lastName: string;
    email: string;
    phoneNumber: string;
    is_admin?: boolean;
    user_id: number;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type AuthAuthUserCreate = {
    username: string;
    email: string;
    first_name: string;
    last_name: string;
    password: string;
};

export type ModulesUserUserSchemaUserCreate = {
    firstName: string;
    lastName: string;
    email: string;
    phoneNumber: string;
    is_admin?: boolean;
    password: string;
};

export type GetUsersApiV1UsersGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/users';
};

export type GetUsersApiV1UsersGetResponses = {
    /**
     * Successful Response
     */
    200: Array<UserResponse>;
};

export type GetUsersApiV1UsersGetResponse = GetUsersApiV1UsersGetResponses[keyof GetUsersApiV1UsersGetResponses];

export type CreateUserApiV1UsersPostData = {
    body: ModulesUserUserSchemaUserCreate;
    path?: never;
    query?: never;
    url: '/api/v1/users';
};

export type CreateUserApiV1UsersPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateUserApiV1UsersPostError = CreateUserApiV1UsersPostErrors[keyof CreateUserApiV1UsersPostErrors];

export type CreateUserApiV1UsersPostResponses = {
    /**
     * Successful Response
     */
    200: UserResponse;
};

export type CreateUserApiV1UsersPostResponse = CreateUserApiV1UsersPostResponses[keyof CreateUserApiV1UsersPostResponses];

export type DeleteUserApiV1UsersUserIdDeleteData = {
    body?: never;
    path: {
        user_id: number;
    };
    query?: never;
    url: '/api/v1/users/{user_id}';
};

export type DeleteUserApiV1UsersUserIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteUserApiV1UsersUserIdDeleteError = DeleteUserApiV1UsersUserIdDeleteErrors[keyof DeleteUserApiV1UsersUserIdDeleteErrors];

export type DeleteUserApiV1UsersUserIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type DeleteUserApiV1UsersUserIdDeleteResponse = DeleteUserApiV1UsersUserIdDeleteResponses[keyof DeleteUserApiV1UsersUserIdDeleteResponses];

export type GetUserApiV1UsersUserIdGetData = {
    body?: never;
    path: {
        user_id: number;
    };
    query?: never;
    url: '/api/v1/users/{user_id}';
};

export type GetUserApiV1UsersUserIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUserApiV1UsersUserIdGetError = GetUserApiV1UsersUserIdGetErrors[keyof GetUserApiV1UsersUserIdGetErrors];

export type GetUserApiV1UsersUserIdGetResponses = {
    /**
     * Successful Response
     */
    200: UserResponse;
};

export type GetUserApiV1UsersUserIdGetResponse = GetUserApiV1UsersUserIdGetResponses[keyof GetUserApiV1UsersUserIdGetResponses];

export type UpdateUserApiV1UsersUserIdPutData = {
    body: UserBase;
    path: {
        user_id: number;
    };
    query?: never;
    url: '/api/v1/users/{user_id}';
};

export type UpdateUserApiV1UsersUserIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateUserApiV1UsersUserIdPutError = UpdateUserApiV1UsersUserIdPutErrors[keyof UpdateUserApiV1UsersUserIdPutErrors];

export type UpdateUserApiV1UsersUserIdPutResponses = {
    /**
     * Successful Response
     */
    200: UserResponse;
};

export type UpdateUserApiV1UsersUserIdPutResponse = UpdateUserApiV1UsersUserIdPutResponses[keyof UpdateUserApiV1UsersUserIdPutResponses];

export type RegisterUserAuthUsersPostData = {
    body: AuthAuthUserCreate;
    path?: never;
    query?: never;
    url: '/auth/users/';
};

export type RegisterUserAuthUsersPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RegisterUserAuthUsersPostError = RegisterUserAuthUsersPostErrors[keyof RegisterUserAuthUsersPostErrors];

export type RegisterUserAuthUsersPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type LoginForAccessTokenAuthTokenPostData = {
    body: BodyLoginForAccessTokenAuthTokenPost;
    path?: never;
    query?: never;
    url: '/auth/token';
};

export type LoginForAccessTokenAuthTokenPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoginForAccessTokenAuthTokenPostError = LoginForAccessTokenAuthTokenPostErrors[keyof LoginForAccessTokenAuthTokenPostErrors];

export type LoginForAccessTokenAuthTokenPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ReadUsersMeAuthUsersMeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/auth/users/me';
};

export type ReadUsersMeAuthUsersMeGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type RootHealthzGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/healthz';
};

export type RootHealthzGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ClientOptions = {
    baseUrl: 'http://localhost:8000' | (string & {});
};